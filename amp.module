<?php

/**
 * @file
 * Contains amp.module.
 */

/**
 * Implements hook_help().
 */
function amp_help($path, $arg) {
  switch ($path) {
    case 'admin/help#amp':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Google AMP integration') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
function amp_menu() {
  $items = array();
  $items['admin/config/content/amp'] = array(
    'title' => 'AMP Configuration',
    'description' => 'Configure the AMP module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('amp_admin_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'amp.admin.inc',
  );
  return $items;
}



/**
 * Implements hook_entity_info_alter().
 */
function amp_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['amp'] = array(
    'label' => t('AMP'),
    'custom settings' => FALSE,
  );
}

/**
 * Determines whether a request should return AMP HTML.
 */
function amp_is_amp_request() {

  // Get current path.
  $path = current_path();

  // Get current URL.
  $current_url = url(current_path(), array('absolute' => TRUE));

  // Check if URL ends with '/amp'
  if (stripos(strrev($current_url), strrev('/amp')) === 0) {
    // Get system path.
    $system_path = drupal_lookup_path('source', $path);

    // Load menu item based on system path.
    $menu_item = menu_get_item($system_path ? $system_path : current_path());

    if ($menu_item && isset($menu_item['page_arguments'][0])) {
      // Load the node.
      $node = $menu_item['page_arguments'][0];

      // Get node type.
      $node_type = node_type_get_type($node);

      // Get view mode settings for node type.
      if ($node_type) {
        $view_mode_settings = field_view_mode_settings('node', $node_type->type);
      }
      if (isset($view_mode_settings['amp']) && $view_mode_settings['amp']['custom_settings']) {
        return TRUE;
      }
    }
  }

  return FALSE;
}

/**
 * Implements hook_custom_theme().
 */
function amp_custom_theme() {
  if (amp_is_amp_request()) {
    return variable_get('amp_theme', 'ampsubtheme_example');
  }
}

/**
 * Implements hook_entity_view_mode_alter().
 *
 * Switches view mode to 'amp' for AMP requests.
 */
function amp_entity_view_mode_alter(&$view_mode, $context) {
  if ($view_mode === 'full' && amp_is_amp_request()) {
    $view_mode = 'amp';
  }
}

/**
* Implements hook_form_BASE_FORM_ID_alter().
*/
function amp_form_node_form_alter(&$form, &$form_state, $form_id) {
  $view_mode_settings = field_view_mode_settings('node', $form_state['node']->type);
  // For content type with an AMP view mode, add a "Save and view AMP" button.
  if (isset($view_mode_settings['amp']) && $view_mode_settings['amp']['custom_settings'] == TRUE) {
    // Add the buttong between "Preview" (weight of 10) and "Delete" (15).
    $form['actions']['save_view_amp'] = array(
      '#type' => 'submit',
      '#value' => t('Save and view AMP page'),
      '#submit' => array('node_form_submit', 'amp_node_form_submit'),
      '#weight' => 12,
      '#access' => TRUE,
    );
  }
}

/**
 * Submit handler for viewing the AMP page.
 */
function amp_node_form_submit(&$form, $form_state) {
  if (!empty($form_state['node']->path['alias'])) {
    drupal_goto($form_state['node']->path['alias'] . '/amp');
  }
  elseif (!empty($form_state['node']->path['source'])) {
    drupal_goto($form_state['node']->path['source'] . '/amp');
  }
}

/**
 * Implements hook_form_alter().
 */
function amp_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'field_ui_display_overview_form') {
    $form['#submit'][] = 'amp_view_modes_submit';
  }
}

/**
 * Submit handler for enabling or disabling AMP view modes.
 */
function amp_view_modes_submit(&$form, $form_state) {
  $new_values = array();
  $old_values = array();
  if (isset($form_state['values']['view_modes_custom'])) {
    $new_values = array_filter($form_state['values']['view_modes_custom']);
  }
  if (isset($form_state['complete form']['modes']['view_modes_custom']['#default_value'])) {
    $old_values = $form_state['complete form']['modes']['view_modes_custom']['#default_value'];
  }
  $removed = array_diff($old_values, $new_values);
  $added = array_diff($new_values, $old_values);
  if (is_array($remove) && in_array('amp', $removed)) {
    // TODO: Remove aliases per https://www.drupal.org/node/2678294.
    // If the AMP view was removed, clear cache of AMP-enabled content.
    cache_clear_all('amp_enabled_types', 'cache');
  }
  if (is_array($added) && in_array('amp', $added)) {
    // TODO: Create aliases per https://www.drupal.org/node/2678294.
    // If the AMP view was added, clear cache of AMP-enabled content.
    cache_clear_all('amp_enabled_types', 'cache');
  }
}
